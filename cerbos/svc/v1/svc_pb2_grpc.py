# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cerbos.request.v1 import request_pb2 as cerbos_dot_request_dot_v1_dot_request__pb2
from cerbos.response.v1 import response_pb2 as cerbos_dot_response_dot_v1_dot_response__pb2


class CerbosServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckResourceSet = channel.unary_unary(
                '/cerbos.svc.v1.CerbosService/CheckResourceSet',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.CheckResourceSetRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.CheckResourceSetResponse.FromString,
                )
        self.CheckResourceBatch = channel.unary_unary(
                '/cerbos.svc.v1.CerbosService/CheckResourceBatch',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.CheckResourceBatchRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.CheckResourceBatchResponse.FromString,
                )
        self.CheckResources = channel.unary_unary(
                '/cerbos.svc.v1.CerbosService/CheckResources',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.CheckResourcesRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.CheckResourcesResponse.FromString,
                )
        self.ServerInfo = channel.unary_unary(
                '/cerbos.svc.v1.CerbosService/ServerInfo',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.ServerInfoRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.ServerInfoResponse.FromString,
                )
        self.PlanResources = channel.unary_unary(
                '/cerbos.svc.v1.CerbosService/PlanResources',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.PlanResourcesRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.PlanResourcesResponse.FromString,
                )


class CerbosServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckResourceSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckResourceBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckResources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ServerInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlanResources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CerbosServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckResourceSet': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckResourceSet,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.CheckResourceSetRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.CheckResourceSetResponse.SerializeToString,
            ),
            'CheckResourceBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckResourceBatch,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.CheckResourceBatchRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.CheckResourceBatchResponse.SerializeToString,
            ),
            'CheckResources': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckResources,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.CheckResourcesRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.CheckResourcesResponse.SerializeToString,
            ),
            'ServerInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ServerInfo,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.ServerInfoRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.ServerInfoResponse.SerializeToString,
            ),
            'PlanResources': grpc.unary_unary_rpc_method_handler(
                    servicer.PlanResources,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.PlanResourcesRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.PlanResourcesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cerbos.svc.v1.CerbosService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CerbosService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckResourceSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosService/CheckResourceSet',
            cerbos_dot_request_dot_v1_dot_request__pb2.CheckResourceSetRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.CheckResourceSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckResourceBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosService/CheckResourceBatch',
            cerbos_dot_request_dot_v1_dot_request__pb2.CheckResourceBatchRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.CheckResourceBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosService/CheckResources',
            cerbos_dot_request_dot_v1_dot_request__pb2.CheckResourcesRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.CheckResourcesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ServerInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosService/ServerInfo',
            cerbos_dot_request_dot_v1_dot_request__pb2.ServerInfoRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.ServerInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlanResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosService/PlanResources',
            cerbos_dot_request_dot_v1_dot_request__pb2.PlanResourcesRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.PlanResourcesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CerbosAdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddOrUpdatePolicy = channel.unary_unary(
                '/cerbos.svc.v1.CerbosAdminService/AddOrUpdatePolicy',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.AddOrUpdatePolicyRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.AddOrUpdatePolicyResponse.FromString,
                )
        self.ListPolicies = channel.unary_unary(
                '/cerbos.svc.v1.CerbosAdminService/ListPolicies',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.ListPoliciesRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.ListPoliciesResponse.FromString,
                )
        self.GetPolicy = channel.unary_unary(
                '/cerbos.svc.v1.CerbosAdminService/GetPolicy',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.GetPolicyRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.GetPolicyResponse.FromString,
                )
        self.DisablePolicy = channel.unary_unary(
                '/cerbos.svc.v1.CerbosAdminService/DisablePolicy',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.DisablePolicyRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.DisablePolicyResponse.FromString,
                )
        self.EnablePolicy = channel.unary_unary(
                '/cerbos.svc.v1.CerbosAdminService/EnablePolicy',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.EnablePolicyRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.EnablePolicyResponse.FromString,
                )
        self.ListAuditLogEntries = channel.unary_stream(
                '/cerbos.svc.v1.CerbosAdminService/ListAuditLogEntries',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.ListAuditLogEntriesRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.ListAuditLogEntriesResponse.FromString,
                )
        self.AddOrUpdateSchema = channel.unary_unary(
                '/cerbos.svc.v1.CerbosAdminService/AddOrUpdateSchema',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.AddOrUpdateSchemaRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.AddOrUpdateSchemaResponse.FromString,
                )
        self.ListSchemas = channel.unary_unary(
                '/cerbos.svc.v1.CerbosAdminService/ListSchemas',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.ListSchemasRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.ListSchemasResponse.FromString,
                )
        self.GetSchema = channel.unary_unary(
                '/cerbos.svc.v1.CerbosAdminService/GetSchema',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.GetSchemaRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.GetSchemaResponse.FromString,
                )
        self.DeleteSchema = channel.unary_unary(
                '/cerbos.svc.v1.CerbosAdminService/DeleteSchema',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.DeleteSchemaRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.DeleteSchemaResponse.FromString,
                )
        self.ReloadStore = channel.unary_unary(
                '/cerbos.svc.v1.CerbosAdminService/ReloadStore',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.ReloadStoreRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.ReloadStoreResponse.FromString,
                )


class CerbosAdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddOrUpdatePolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPolicies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisablePolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnablePolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAuditLogEntries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddOrUpdateSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSchemas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReloadStore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CerbosAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddOrUpdatePolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.AddOrUpdatePolicy,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.AddOrUpdatePolicyRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.AddOrUpdatePolicyResponse.SerializeToString,
            ),
            'ListPolicies': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPolicies,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.ListPoliciesRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.ListPoliciesResponse.SerializeToString,
            ),
            'GetPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPolicy,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.GetPolicyRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.GetPolicyResponse.SerializeToString,
            ),
            'DisablePolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.DisablePolicy,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.DisablePolicyRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.DisablePolicyResponse.SerializeToString,
            ),
            'EnablePolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.EnablePolicy,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.EnablePolicyRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.EnablePolicyResponse.SerializeToString,
            ),
            'ListAuditLogEntries': grpc.unary_stream_rpc_method_handler(
                    servicer.ListAuditLogEntries,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.ListAuditLogEntriesRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.ListAuditLogEntriesResponse.SerializeToString,
            ),
            'AddOrUpdateSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.AddOrUpdateSchema,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.AddOrUpdateSchemaRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.AddOrUpdateSchemaResponse.SerializeToString,
            ),
            'ListSchemas': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSchemas,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.ListSchemasRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.ListSchemasResponse.SerializeToString,
            ),
            'GetSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSchema,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.GetSchemaRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.GetSchemaResponse.SerializeToString,
            ),
            'DeleteSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSchema,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.DeleteSchemaRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.DeleteSchemaResponse.SerializeToString,
            ),
            'ReloadStore': grpc.unary_unary_rpc_method_handler(
                    servicer.ReloadStore,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.ReloadStoreRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.ReloadStoreResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cerbos.svc.v1.CerbosAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CerbosAdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddOrUpdatePolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosAdminService/AddOrUpdatePolicy',
            cerbos_dot_request_dot_v1_dot_request__pb2.AddOrUpdatePolicyRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.AddOrUpdatePolicyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPolicies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosAdminService/ListPolicies',
            cerbos_dot_request_dot_v1_dot_request__pb2.ListPoliciesRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.ListPoliciesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosAdminService/GetPolicy',
            cerbos_dot_request_dot_v1_dot_request__pb2.GetPolicyRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.GetPolicyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisablePolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosAdminService/DisablePolicy',
            cerbos_dot_request_dot_v1_dot_request__pb2.DisablePolicyRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.DisablePolicyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnablePolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosAdminService/EnablePolicy',
            cerbos_dot_request_dot_v1_dot_request__pb2.EnablePolicyRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.EnablePolicyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAuditLogEntries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/cerbos.svc.v1.CerbosAdminService/ListAuditLogEntries',
            cerbos_dot_request_dot_v1_dot_request__pb2.ListAuditLogEntriesRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.ListAuditLogEntriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddOrUpdateSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosAdminService/AddOrUpdateSchema',
            cerbos_dot_request_dot_v1_dot_request__pb2.AddOrUpdateSchemaRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.AddOrUpdateSchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSchemas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosAdminService/ListSchemas',
            cerbos_dot_request_dot_v1_dot_request__pb2.ListSchemasRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.ListSchemasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosAdminService/GetSchema',
            cerbos_dot_request_dot_v1_dot_request__pb2.GetSchemaRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.GetSchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosAdminService/DeleteSchema',
            cerbos_dot_request_dot_v1_dot_request__pb2.DeleteSchemaRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.DeleteSchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReloadStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosAdminService/ReloadStore',
            cerbos_dot_request_dot_v1_dot_request__pb2.ReloadStoreRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.ReloadStoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CerbosPlaygroundServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PlaygroundValidate = channel.unary_unary(
                '/cerbos.svc.v1.CerbosPlaygroundService/PlaygroundValidate',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundValidateRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundValidateResponse.FromString,
                )
        self.PlaygroundTest = channel.unary_unary(
                '/cerbos.svc.v1.CerbosPlaygroundService/PlaygroundTest',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundTestRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundTestResponse.FromString,
                )
        self.PlaygroundEvaluate = channel.unary_unary(
                '/cerbos.svc.v1.CerbosPlaygroundService/PlaygroundEvaluate',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundEvaluateRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundEvaluateResponse.FromString,
                )
        self.PlaygroundProxy = channel.unary_unary(
                '/cerbos.svc.v1.CerbosPlaygroundService/PlaygroundProxy',
                request_serializer=cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundProxyRequest.SerializeToString,
                response_deserializer=cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundProxyResponse.FromString,
                )


class CerbosPlaygroundServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PlaygroundValidate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlaygroundTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlaygroundEvaluate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlaygroundProxy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CerbosPlaygroundServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PlaygroundValidate': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaygroundValidate,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundValidateRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundValidateResponse.SerializeToString,
            ),
            'PlaygroundTest': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaygroundTest,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundTestRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundTestResponse.SerializeToString,
            ),
            'PlaygroundEvaluate': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaygroundEvaluate,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundEvaluateRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundEvaluateResponse.SerializeToString,
            ),
            'PlaygroundProxy': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaygroundProxy,
                    request_deserializer=cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundProxyRequest.FromString,
                    response_serializer=cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundProxyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cerbos.svc.v1.CerbosPlaygroundService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CerbosPlaygroundService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PlaygroundValidate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosPlaygroundService/PlaygroundValidate',
            cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundValidateRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundValidateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlaygroundTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosPlaygroundService/PlaygroundTest',
            cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundTestRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundTestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlaygroundEvaluate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosPlaygroundService/PlaygroundEvaluate',
            cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundEvaluateRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundEvaluateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlaygroundProxy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerbos.svc.v1.CerbosPlaygroundService/PlaygroundProxy',
            cerbos_dot_request_dot_v1_dot_request__pb2.PlaygroundProxyRequest.SerializeToString,
            cerbos_dot_response_dot_v1_dot_response__pb2.PlaygroundProxyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
