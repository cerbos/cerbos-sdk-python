# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cerbos/cloud/logs/v1/logs.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'cerbos/cloud/logs/v1/logs.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from cerbos.audit.v1 import audit_pb2 as cerbos_dot_audit_dot_v1_dot_audit__pb2
from cerbos.cloud.pdp.v1 import pdp_pb2 as cerbos_dot_cloud_dot_pdp_dot_v1_dot_pdp__pb2
from google.api import visibility_pb2 as google_dot_api_dot_visibility__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1f\x63\x65rbos/cloud/logs/v1/logs.proto\x12\x14\x63\x65rbos.cloud.logs.v1\x1a\x1b\x62uf/validate/validate.proto\x1a\x1b\x63\x65rbos/audit/v1/audit.proto\x1a\x1d\x63\x65rbos/cloud/pdp/v1/pdp.proto\x1a\x1bgoogle/api/visibility.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x97\x04\n\x0bIngestBatch\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12N\n\x07\x65ntries\x18\x02 \x03(\x0b\x32\'.cerbos.cloud.logs.v1.IngestBatch.EntryB\x0b\xbaH\x08\x92\x01\x05\x08\x01\x10\x80\x08R\x07\x65ntries\x1a\xc6\x02\n\x05\x45ntry\x12K\n\x04kind\x18\x01 \x01(\x0e\x32+.cerbos.cloud.logs.v1.IngestBatch.EntryKindB\n\xbaH\x07\x82\x01\x04\x18\x01\x18\x02R\x04kind\x12@\n\ttimestamp\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x06\xbaH\x03\xc8\x01\x01R\ttimestamp\x12K\n\x10\x61\x63\x63\x65ss_log_entry\x18\x03 \x01(\x0b\x32\x1f.cerbos.audit.v1.AccessLogEntryH\x00R\x0e\x61\x63\x63\x65ssLogEntry\x12Q\n\x12\x64\x65\x63ision_log_entry\x18\x04 \x01(\x0b\x32!.cerbos.audit.v1.DecisionLogEntryH\x00R\x10\x64\x65\x63isionLogEntryB\x0e\n\x05\x65ntry\x12\x05\xbaH\x02\x08\x01\"_\n\tEntryKind\x12\x1a\n\x16\x45NTRY_KIND_UNSPECIFIED\x10\x00\x12\x19\n\x15\x45NTRY_KIND_ACCESS_LOG\x10\x01\x12\x1b\n\x17\x45NTRY_KIND_DECISION_LOG\x10\x02\"\x90\x01\n\rIngestRequest\x12>\n\x06pdp_id\x18\x01 \x01(\x0b\x32\x1f.cerbos.cloud.pdp.v1.IdentifierB\x06\xbaH\x03\xc8\x01\x01R\x05pdpId\x12?\n\x05\x62\x61tch\x18\x02 \x01(\x0b\x32!.cerbos.cloud.logs.v1.IngestBatchB\x06\xbaH\x03\xc8\x01\x01R\x05\x62\x61tch\"\xda\x01\n\x0eIngestResponse\x12\x32\n\x07success\x18\x01 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x07success\x12H\n\x07\x62\x61\x63koff\x18\x02 \x01(\x0b\x32,.cerbos.cloud.logs.v1.IngestResponse.BackoffH\x00R\x07\x62\x61\x63koff\x1a@\n\x07\x42\x61\x63koff\x12\x35\n\x08\x64uration\x18\x01 \x01(\x0b\x32\x19.google.protobuf.DurationR\x08\x64urationB\x08\n\x06status2\x80\x01\n\x11\x43\x65rbosLogsService\x12U\n\x06Ingest\x12#.cerbos.cloud.logs.v1.IngestRequest\x1a$.cerbos.cloud.logs.v1.IngestResponse\"\x00\x1a\x14\xfa\xd2\xe4\x93\x02\x0e\x12\x0c\x45XPERIMENTALBx\n\x1c\x64\x65v.cerbos.api.cloud.v1.logsZ=github.com/cerbos/cloud-api/genpb/cerbos/cloud/logs/v1;logsv1\xaa\x02\x18\x43\x65rbos.Api.Cloud.V1.Logsb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cerbos.cloud.logs.v1.logs_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\034dev.cerbos.api.cloud.v1.logsZ=github.com/cerbos/cloud-api/genpb/cerbos/cloud/logs/v1;logsv1\252\002\030Cerbos.Api.Cloud.V1.Logs'
  _globals['_INGESTBATCH_ENTRY'].oneofs_by_name['entry']._loaded_options = None
  _globals['_INGESTBATCH_ENTRY'].oneofs_by_name['entry']._serialized_options = b'\272H\002\010\001'
  _globals['_INGESTBATCH_ENTRY'].fields_by_name['kind']._loaded_options = None
  _globals['_INGESTBATCH_ENTRY'].fields_by_name['kind']._serialized_options = b'\272H\007\202\001\004\030\001\030\002'
  _globals['_INGESTBATCH_ENTRY'].fields_by_name['timestamp']._loaded_options = None
  _globals['_INGESTBATCH_ENTRY'].fields_by_name['timestamp']._serialized_options = b'\272H\003\310\001\001'
  _globals['_INGESTBATCH'].fields_by_name['entries']._loaded_options = None
  _globals['_INGESTBATCH'].fields_by_name['entries']._serialized_options = b'\272H\010\222\001\005\010\001\020\200\010'
  _globals['_INGESTREQUEST'].fields_by_name['pdp_id']._loaded_options = None
  _globals['_INGESTREQUEST'].fields_by_name['pdp_id']._serialized_options = b'\272H\003\310\001\001'
  _globals['_INGESTREQUEST'].fields_by_name['batch']._loaded_options = None
  _globals['_INGESTREQUEST'].fields_by_name['batch']._serialized_options = b'\272H\003\310\001\001'
  _globals['_CERBOSLOGSSERVICE']._loaded_options = None
  _globals['_CERBOSLOGSSERVICE']._serialized_options = b'\372\322\344\223\002\016\022\014EXPERIMENTAL'
  _globals['_INGESTBATCH']._serialized_start=270
  _globals['_INGESTBATCH']._serialized_end=805
  _globals['_INGESTBATCH_ENTRY']._serialized_start=382
  _globals['_INGESTBATCH_ENTRY']._serialized_end=708
  _globals['_INGESTBATCH_ENTRYKIND']._serialized_start=710
  _globals['_INGESTBATCH_ENTRYKIND']._serialized_end=805
  _globals['_INGESTREQUEST']._serialized_start=808
  _globals['_INGESTREQUEST']._serialized_end=952
  _globals['_INGESTRESPONSE']._serialized_start=955
  _globals['_INGESTRESPONSE']._serialized_end=1173
  _globals['_INGESTRESPONSE_BACKOFF']._serialized_start=1099
  _globals['_INGESTRESPONSE_BACKOFF']._serialized_end=1163
  _globals['_CERBOSLOGSSERVICE']._serialized_start=1176
  _globals['_CERBOSLOGSSERVICE']._serialized_end=1304
# @@protoc_insertion_point(module_scope)
